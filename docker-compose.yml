x-airflow-common: &airflow-common
  image: custom-airflow:2.9.0
  environment:
    AIRFLOW__DATABASE__SQL_ALCHEMY_CONN: postgresql+psycopg2://airflow:airflow1234@postgres/airflow
    AIRFLOW__CORE__EXECUTOR: SequentialExecutor
    _AIRFLOW_DB_MIGRATE: "true"
    _AIRFLOW_WWW_USER_CREATE: "true"
    _AIRFLOW_WWW_USER_USERNAME: "admin"
    _AIRFLOW_WWW_USER_PASSWORD: "admin1234"
  depends_on:
    - postgres
  networks:
    - airflow_network
  volumes:
    - ./dags:/opt/airflow/dags
    - ./logs:/opt/airflow/logs
    - ./plugins:/opt/airflow/plugins
    - ./models:/opt/airflow/models
    - ~/Documents:/mnt/host-documents:ro

services:
  postgres:
    image: postgres:15
    container_name: airflow_postgres
    environment:
      POSTGRES_USER: airflow
      POSTGRES_PASSWORD: airflow1234
      POSTGRES_DB: airflow
    volumes:
      - postgres_data:/var/lib/postgresql/data
    ports:
      - "5433:5432"
    healthcheck:
      test: ["CMD", "pg_isready", "-U", "airflow"]
      interval: 5s
      retries: 5
    networks:
      - airflow_network

  clickhouse:
      image: clickhouse/clickhouse-server:24.1
      container_name: airflow_clickhouse
      hostname: clickhouse
      ports:
        - "8123:8123"
        - "9000:9000"
      environment:
        CLICKHOUSE_DB: analytics
        CLICKHOUSE_USER: airflow
        CLICKHOUSE_PASSWORD: clickhouse1234
        CLICKHOUSE_DEFAULT_ACCESS_MANAGEMENT: 1
      volumes:
        - clickhouse_data:/var/lib/clickhouse
      healthcheck:
        test: ["CMD", "clickhouse-client", "--query", "SELECT 1"]        
        interval: 10s
        timeout: 5s
        retries: 5
      networks:
        - airflow_network
      ulimits:
        nofile:
          soft: 262144
          hard: 262144

  airflow-init:
      <<: *airflow-common
      container_name: airflow_init
      entrypoint: /bin/bash
      command:
        - -c
        - |
          mkdir -p /opt/airflow/logs /opt/airflow/dags /opt/airflow/plugins /opt/airflow/models
          exec /entrypoint airflow version
      networks:
        - airflow_network
      depends_on:
        - postgres
      user: 50000:0

  webserver:
    <<: *airflow-common
    container_name: airflow_webserver
    command: webserver
    ports:
      - "8080:8080"
    healthcheck:
      test: ["CMD", "curl", "-f", "http://localhost:8080/health"]
      interval: 30s
      timeout: 30s
      retries: 3
    restart: always
    depends_on:
      airflow-init:
        condition: service_completed_successfully
  
  scheduler:
    <<: *airflow-common
    container_name: airflow_scheduler
    command: scheduler
    restart: always
    healthcheck:
      test: ["CMD-SHELL", "airflow jobs check --job-type SchedulerJob --hostname localhost"]
      interval: 30s
      timeout: 30s
      retries: 3
    depends_on:
      airflow-init:
        condition: service_completed_successfully

volumes:
  postgres_data:
    driver: local
  clickhouse_data:
    driver: local

networks:
  airflow_network:
    driver: bridge
